<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="dev-master@006f441198dc431fa54215f17682cfa613075aa8">
  <file src="examples/TemplateChecker.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$comment_block-&gt;tags['variablesfrom']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$comment_block-&gt;tags['variablesfrom'][0]</code>
      <code>$matches[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="examples/TemplateScanner.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$comment_block-&gt;tags['variablesfrom']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$comment_block-&gt;tags['variablesfrom'][0]</code>
      <code>$matches[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/CodeLocation/ParseErrorLocation.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$error-&gt;getAttributes()['endFilePos']</code>
      <code>$error-&gt;getAttributes()['startFilePos']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Codebase.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$matches[0]</code>
      <code>$symbol_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Config.php">
    <LiteralKeyUnshapedArray occurrences="60">
      <code>$composer_json["require"]</code>
      <code>$composer_json['require']</code>
      <code>$composer_json['require']['php']</code>
      <code>$config_xml[$xmlName]</code>
      <code>$config_xml[$xmlName]</code>
      <code>$config_xml['autoloader']</code>
      <code>$config_xml['autoloader']</code>
      <code>$config_xml['cacheDirectory']</code>
      <code>$config_xml['cacheDirectory']</code>
      <code>$config_xml['errorBaseline']</code>
      <code>$config_xml['errorBaseline']</code>
      <code>$config_xml['errorLevel']</code>
      <code>$config_xml['errorLevel']</code>
      <code>$config_xml['errorLevel']</code>
      <code>$config_xml['findUnusedCode']</code>
      <code>$config_xml['findUnusedCode']</code>
      <code>$config_xml['findUnusedCode']</code>
      <code>$config_xml['findUnusedVariablesAndParams']</code>
      <code>$config_xml['findUnusedVariablesAndParams']</code>
      <code>$config_xml['findUnusedVariablesAndParams']</code>
      <code>$config_xml['inferPropertyTypesFromConstructor']</code>
      <code>$config_xml['inferPropertyTypesFromConstructor']</code>
      <code>$config_xml['maxShapedArraySize']</code>
      <code>$config_xml['maxShapedArraySize']</code>
      <code>$config_xml['maxStringLength']</code>
      <code>$config_xml['maxStringLength']</code>
      <code>$config_xml['phpVersion']</code>
      <code>$config_xml['phpVersion']</code>
      <code>$config_xml['serializer']</code>
      <code>$config_xml['serializer']</code>
      <code>$config_xml['threads']</code>
      <code>$config_xml['threads']</code>
      <code>$defined_functions['internal']</code>
      <code>$defined_functions['user']</code>
      <code>$exception_class['name']</code>
      <code>$exception_class['name']</code>
      <code>$exception_class['onlyGlobalScope']</code>
      <code>$exception_class['onlyGlobalScope']</code>
      <code>$extension["name"]</code>
      <code>$extension["name"]</code>
      <code>$extension["name"]</code>
      <code>$extension["name"]</code>
      <code>$extension['checker']</code>
      <code>$extension['checker']</code>
      <code>$extension['name']</code>
      <code>$extension['scanner']</code>
      <code>$extension['scanner']</code>
      <code>$forbidden_function['name']</code>
      <code>$issue_handler['name']</code>
      <code>$mock_class['name']</code>
      <code>$plugin['class']</code>
      <code>$plugin['filename']</code>
      <code>$stub_file['name']</code>
      <code>$stub_file['name']</code>
      <code>$stub_file['preloadClasses']</code>
      <code>$stub_file['preloadClasses']</code>
      <code>$this-&gt;issue_handlers[$issue_type]</code>
      <code>$universal_object_crate['name']</code>
      <code>$var['name']</code>
      <code>$var['type']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Config/Creator.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>$composer_json['autoload']</code>
      <code>$composer_json['autoload']</code>
      <code>$composer_json['autoload']['psr-0']</code>
      <code>$composer_json['autoload']['psr-0']</code>
      <code>$composer_json['autoload']['psr-4']</code>
      <code>$composer_json['autoload']['psr-4']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Config/ErrorLevelFileFilter.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$config['type']</code>
      <code>$e['type']</code>
      <code>$e['type']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Config/FileFilter.php">
    <LiteralKeyUnshapedArray occurrences="32">
      <code>$config['allowMissingFiles']</code>
      <code>$config['directory']</code>
      <code>$config['file']</code>
      <code>$config['referencedClass']</code>
      <code>$config['referencedConstant']</code>
      <code>$config['referencedFunction']</code>
      <code>$config['referencedMethod']</code>
      <code>$config['referencedProperty']</code>
      <code>$config['referencedVariable']</code>
      <code>$directory['ignoreTypeStats']</code>
      <code>$directory['ignoreTypeStats']</code>
      <code>$directory['name']</code>
      <code>$directory['name']</code>
      <code>$directory['resolveSymlinks']</code>
      <code>$directory['resolveSymlinks']</code>
      <code>$directory['useStrictTypes']</code>
      <code>$directory['useStrictTypes']</code>
      <code>$e['allowMissingFiles']</code>
      <code>$file['name']</code>
      <code>$file['name']</code>
      <code>$referenced_class['name']</code>
      <code>$referenced_class['name']</code>
      <code>$referenced_constant['name']</code>
      <code>$referenced_constant['name']</code>
      <code>$referenced_function['name']</code>
      <code>$referenced_function['name']</code>
      <code>$referenced_method['name']</code>
      <code>$referenced_method['name']</code>
      <code>$referenced_property['name']</code>
      <code>$referenced_property['name']</code>
      <code>$referenced_variable['name']</code>
      <code>$referenced_variable['name']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>explode('::', $method_id)[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Config/IssueHandler.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$e['errorLevel']</code>
      <code>$e['errorLevel']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/DocComment.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$matches['issues']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/ErrorBaseline.php">
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$matches[1]</code>
      <code>$matches[2]</code>
      <code>$matches[3]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/AttributesAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$classlike_storage-&gt;methods['__construct']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/ClassAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="12">
      <code>$constructor_class_storage-&gt;methods['__construct']</code>
      <code>$docBlock-&gt;tags['psalm-suppress']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingPropertyType']</code>
      <code>$storage-&gt;appearing_method_ids['__construct']</code>
      <code>$storage-&gt;class_implements['iterator']</code>
      <code>$storage-&gt;class_implements['iteratoraggregate']</code>
      <code>$storage-&gt;declaring_method_ids['__construct']</code>
      <code>$storage-&gt;declaring_method_ids['__construct']</code>
      <code>$storage-&gt;parent_classes['dateperiod']</code>
      <code>$storage-&gt;parent_classes['domnodelist']</code>
      <code>$storage-&gt;parent_classes['ds\collection']</code>
      <code>$storage-&gt;parent_classes['pdostatement']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$comments[0]</code>
      <code>$stmt-&gt;props[0]</code>
      <code>$uninitialized_variables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/ClosureAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$context-&gt;vars_in_scope['$this']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/CommentAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="20">
      <code>$parsed_docblock-&gt;combined_tags['var']</code>
      <code>$parsed_docblock-&gt;tags['deprecated']</code>
      <code>$parsed_docblock-&gt;tags['deprecated']</code>
      <code>$parsed_docblock-&gt;tags['internal']</code>
      <code>$parsed_docblock-&gt;tags['internal']</code>
      <code>$parsed_docblock-&gt;tags['psalm-allow-private-mutation']</code>
      <code>$parsed_docblock-&gt;tags['psalm-allow-private-mutation']</code>
      <code>$parsed_docblock-&gt;tags['psalm-internal']</code>
      <code>$parsed_docblock-&gt;tags['psalm-internal']</code>
      <code>$parsed_docblock-&gt;tags['psalm-readonly']</code>
      <code>$parsed_docblock-&gt;tags['psalm-readonly']</code>
      <code>$parsed_docblock-&gt;tags['psalm-readonly-allow-private-mutation']</code>
      <code>$parsed_docblock-&gt;tags['psalm-readonly-allow-private-mutation']</code>
      <code>$parsed_docblock-&gt;tags['psalm-readonly-allow-private-mutation']</code>
      <code>$parsed_docblock-&gt;tags['psalm-suppress']</code>
      <code>$parsed_docblock-&gt;tags['psalm-suppress']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-escape']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-escape']</code>
      <code>$parsed_docblock-&gt;tags['readonly']</code>
      <code>$parsed_docblock-&gt;tags['readonly']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/FileAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$this_context-&gt;vars_in_scope['$this']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/FunctionLike/ReturnTypeAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="9">
      <code>$project_analyzer-&gt;getIssuesToFix()['InvalidFalsableReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['InvalidNullableReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['InvalidReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['InvalidReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['LessSpecificReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MismatchingDocblockReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingClosureReturnType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingReturnType']</code>
      <code>$return_type-&gt;getAtomicTypes()['null']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/FunctionLikeAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="5">
      <code>$context-&gt;vars_in_scope['$this']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MismatchingDocblockParamType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingImmutableAnnotation']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingPureAnnotation']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingPureAnnotation']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/MethodComparator.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$project_analyzer-&gt;getIssuesToFix()['ParamNameMismatch']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/ProjectAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="4">
      <code>$destination_parts[1]</code>
      <code>$destination_parts[1]</code>
      <code>$destination_parts[1]</code>
      <code>$source_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/ForeachAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="5">
      <code>$generic_storage-&gt;template_extended_params['Traversable']</code>
      <code>$generic_storage-&gt;template_extended_params['Traversable']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['UnnecessaryVarAnnotation']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$iterator_atomic_type-&gt;type_params[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/LoopAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$pre_conditions[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/SwitchAnalyzer.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$context-&gt;assigned_var_ids += $switch_scope-&gt;new_assigned_var_ids</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Block/SwitchCaseAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$new_case_equality_expr-&gt;getArgs()[1]</code>
      <code>$switch_scope-&gt;leftover_statements[0]</code>
      <code>$traverser-&gt;traverse([$switch_condition])[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/EchoAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$codebase-&gt;config-&gt;forbidden_functions['echo']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/ArrayAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$atomic_key_type-&gt;methods['__toString']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/AssertionFinder.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$class_definition-&gt;methods['__get']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="35">
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$assertion-&gt;rule[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$count_expr-&gt;getArgs()[0]</code>
      <code>$counted_expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[0]</code>
      <code>$expr-&gt;getArgs()[1]</code>
      <code>$expr-&gt;getArgs()[1]</code>
      <code>$expr-&gt;getArgs()[1]</code>
      <code>$get_debug_type_expr-&gt;getArgs()[0]</code>
      <code>$get_debug_type_expr-&gt;getArgs()[0]</code>
      <code>$getclass_expr-&gt;getArgs()[0]</code>
      <code>$gettype_expr-&gt;getArgs()[0]</code>
      <code>$gettype_expr-&gt;getArgs()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Assignment/ArrayAssignmentAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$atomic_root_types['array']</code>
      <code>$atomic_root_types['array']</code>
      <code>$parent_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Assignment/InstancePropertyAssignmentAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingImmutableAnnotation']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/AssignmentAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$project_analyzer-&gt;getIssuesToFix()['UnnecessaryVarAnnotation']</code>
      <code>$statements_analyzer-&gt;getProjectAnalyzer()-&gt;getIssuesToFix()['UnnecessaryVarAnnotation']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/BinaryOp/ArithmeticOpAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$invalid_left_messages[0]</code>
      <code>$invalid_right_messages[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/ArgumentAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$arg_value_type-&gt;getAtomicTypes()['array']</code>
      <code>$param_type-&gt;getAtomicTypes()['array']</code>
      <code>$param_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$non_existent_method_ids[0]</code>
      <code>$parts[1]</code>
      <code>explode('::', $cased_method_id)[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/ArgumentsAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$arg_value_type-&gt;getAtomicTypes()['array']</code>
      <code>$arg_value_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$arg_function_params[$argument_offset][0]</code>
      <code>$array_type-&gt;getGenericArrayType()-&gt;getChildNodes()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/ArrayFunctionArgumentsAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="5">
      <code>$array_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$array_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$replacement_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$types['array']</code>
      <code>$types['array']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="4">
      <code>$args[0]</code>
      <code>$args[0]</code>
      <code>$args[1]</code>
      <code>$callmap_callables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/FunctionCallAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$var_type_part-&gt;methods['__invoke']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$parts[1]</code>
      <code>$stmt-&gt;getArgs()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/FunctionCallReturnTypeFetcher.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$atomic_types['array']</code>
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/MethodCallAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$result-&gt;invalid_method_call_types[0]</code>
      <code>$result-&gt;non_existent_class_method_ids[0]</code>
      <code>$result-&gt;non_existent_class_method_ids[0]</code>
      <code>$result-&gt;non_existent_interface_method_ids[0]</code>
      <code>$result-&gt;non_existent_interface_method_ids[0]</code>
      <code>$result-&gt;non_existent_magic_method_ids[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/StaticCallAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$context-&gt;vars_in_scope['$this']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/StaticMethod/AtomicStaticCallAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$context-&gt;vars_in_scope['$this']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Call/StaticMethod/ExistingAtomicStaticCallAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$context-&gt;vars_in_scope['$this']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/CallAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$context-&gt;vars_in_scope['$this']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$callable_arg-&gt;items[0]</code>
      <code>$callable_arg-&gt;items[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/CastAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>$casted_type-&gt;getAtomicTypes()['bool']</code>
      <code>$casted_type-&gt;getAtomicTypes()['false']</code>
      <code>$casted_type-&gt;getAtomicTypes()['true']</code>
      <code>$intersection_type-&gt;methods['__toString']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['RedundantCast']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['RedundantCastGivenDocblockType']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/EmptyAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$codebase-&gt;config-&gt;forbidden_functions['empty']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/EvalAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$codebase-&gt;config-&gt;forbidden_functions['eval']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/ExitAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$config-&gt;forbidden_functions['die']</code>
      <code>$config-&gt;forbidden_functions['exit']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Fetch/ArrayFetchAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$atomic_key_type-&gt;methods['__toString']</code>
      <code>$stmt_var_type-&gt;getAtomicTypes()['array']</code>
      <code>$stmt_var_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
    <UnusedVariable occurrences="1">
      <code>$exact_keys</code>
    </UnusedVariable>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Fetch/InstancePropertyFetchAnalyzer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$invalid_fetch_types[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/Fetch/VariableFetchAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$context-&gt;vars_in_scope['$this']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['PossiblyUndefinedGlobalVariable']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['PossiblyUndefinedVariable']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/PrintAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$codebase-&gt;config-&gt;forbidden_functions['print']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/Expression/YieldAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$project_analyzer-&gt;getIssuesToFix()['UnnecessaryVarAnnotation']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$atomic_return_type-&gt;type_params[2]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/Statements/UnusedAssignmentRemover.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$token_list[$iter]</code>
      <code>$token_list[$iter]</code>
      <code>$token_list[$iter]</code>
      <code>$token_list[$iter]</code>
      <code>$token_list[0]</code>
      <code>$token_list[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Analyzer/StatementsAnalyzer.php">
    <LiteralKeyUnshapedArray occurrences="9">
      <code>$comments-&gt;tags['psalm-scope-this']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['UnusedVariable']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;combined_tags['var']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;tags['psalm-check-type']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;tags['psalm-check-type-exact']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;tags['psalm-ignore-variable-method']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;tags['psalm-ignore-variable-property']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;tags['psalm-suppress']</code>
      <code>$statements_analyzer-&gt;parsed_docblock-&gt;tags['psalm-trace']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$stmt-&gt;expr-&gt;getArgs()[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Cli/LanguageServer.php">
    <LiteralKeyUnshapedArray occurrences="18">
      <code>$options['c']</code>
      <code>$options['clear-cache']</code>
      <code>$options['config']</code>
      <code>$options['disable-on-change']</code>
      <code>$options['enable-autocomplete']</code>
      <code>$options['find-dead-code']</code>
      <code>$options['r']</code>
      <code>$options['r']</code>
      <code>$options['root']</code>
      <code>$options['tcp']</code>
      <code>$options['tcp-server']</code>
      <code>$options['use-extended-diagnostic-codes']</code>
      <code>$options['verbose']</code>
      <code>array_key_exists('h', $options)</code>
      <code>array_key_exists('help', $options)</code>
      <code>array_key_exists('use-ini-defaults', $options)</code>
      <code>array_key_exists('v', $options)</code>
      <code>array_key_exists('version', $options)</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Cli/Psalm.php">
    <LiteralKeyUnshapedArray occurrences="58">
      <code>$options['alter']</code>
      <code>$options['c']</code>
      <code>$options['config']</code>
      <code>$options['debug']</code>
      <code>$options['debug']</code>
      <code>$options['disable-extension']</code>
      <code>$options['dump-taint-graph']</code>
      <code>$options['error-level']</code>
      <code>$options['find-dead-code']</code>
      <code>$options['find-unused-code']</code>
      <code>$options['find-unused-psalm-suppress']</code>
      <code>$options['generate-json-map']</code>
      <code>$options['generate-stubs']</code>
      <code>$options['i']</code>
      <code>$options['i']</code>
      <code>$options['ignore-baseline']</code>
      <code>$options['ignore-baseline']</code>
      <code>$options['include-php-versions']</code>
      <code>$options['language-server']</code>
      <code>$options['long-progress']</code>
      <code>$options['no-cache']</code>
      <code>$options['no-diff']</code>
      <code>$options['no-file-cache']</code>
      <code>$options['no-progress']</code>
      <code>$options['no-reflection-cache']</code>
      <code>$options['output-format']</code>
      <code>$options['pretty-print']</code>
      <code>$options['r']</code>
      <code>$options['r']</code>
      <code>$options['refactor']</code>
      <code>$options['root']</code>
      <code>$options['security-analysis']</code>
      <code>$options['set-baseline']</code>
      <code>$options['set-baseline']</code>
      <code>$options['show-info']</code>
      <code>$options['show-info']</code>
      <code>$options['show-snippet']</code>
      <code>$options['taint-analysis']</code>
      <code>$options['threads']</code>
      <code>$options['threads']</code>
      <code>$options['track-tainted-input']</code>
      <code>$options['update-baseline']</code>
      <code>$options['update-baseline']</code>
      <code>$options['use-baseline']</code>
      <code>array_key_exists('debug', $options)</code>
      <code>array_key_exists('debug-by-line', $options)</code>
      <code>array_key_exists('debug-by-line', $options)</code>
      <code>array_key_exists('debug-performance', $options)</code>
      <code>array_key_exists('h', $options)</code>
      <code>array_key_exists('help', $options)</code>
      <code>array_key_exists('init', $options)</code>
      <code>array_key_exists('m', $options)</code>
      <code>array_key_exists('memory-limit', $options)</code>
      <code>array_key_exists('monochrome', $options)</code>
      <code>array_key_exists('no-suggestions', $options)</code>
      <code>array_key_exists('use-ini-defaults', $options)</code>
      <code>array_key_exists('v', $options)</code>
      <code>array_key_exists('version', $options)</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Cli/Psalter.php">
    <LiteralKeyUnshapedArray occurrences="7">
      <code>$options['c']</code>
      <code>$options['config']</code>
      <code>$options['issues']</code>
      <code>$options['root']</code>
      <code>array_key_exists('h', $options)</code>
      <code>array_key_exists('help', $options)</code>
      <code>array_key_exists('monochrome', $options)</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Cli/Refactor.php">
    <LiteralKeyUnshapedArray occurrences="12">
      <code>$options['c']</code>
      <code>$options['config']</code>
      <code>$options['r']</code>
      <code>$options['r']</code>
      <code>$options['root']</code>
      <code>$options['threads']</code>
      <code>array_key_exists('debug', $options)</code>
      <code>array_key_exists('debug-by-line', $options)</code>
      <code>array_key_exists('debug-by-line', $options)</code>
      <code>array_key_exists('debug-emitted-issues', $options)</code>
      <code>array_key_exists('h', $options)</code>
      <code>array_key_exists('help', $options)</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/CliUtils.php">
    <LiteralKeyUnshapedArray occurrences="13">
      <code>$_SERVER['APPVEYOR']</code>
      <code>$_SERVER['CIRCLECI']</code>
      <code>$_SERVER['DRONE']</code>
      <code>$_SERVER['GITHUB_WORKFLOW']</code>
      <code>$_SERVER['GITLAB_CI']</code>
      <code>$_SERVER['JENKINS_URL']</code>
      <code>$_SERVER['SCRUTINIZER']</code>
      <code>$_SERVER['TRAVIS']</code>
      <code>$composer_json['config']</code>
      <code>$composer_json['config']['vendor-dir']</code>
      <code>$options['c']</code>
      <code>$options['c']</code>
      <code>$options['php-version']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Codebase/Analyzer.php">
    <InvalidArgument occurrences="1">
      <code>$issues</code>
    </InvalidArgument>
    <MixedArgument occurrences="1">
      <code>$times</code>
    </MixedArgument>
    <MixedArrayAssignment occurrences="2">
      <code>$times[$file_path]</code>
      <code>$times[$issues[2]]</code>
    </MixedArrayAssignment>
    <MixedAssignment occurrences="2">
      <code>$file</code>
      <code>$time</code>
    </MixedAssignment>
    <UnusedVariable occurrences="1">
      <code>$t</code>
    </UnusedVariable>
  </file>
  <file src="src/Psalm/Internal/Codebase/ClassLikes.php">
    <LiteralKeyUnshapedArray occurrences="10">
      <code>$classlike_storage-&gt;declaring_method_ids['__call']</code>
      <code>$classlike_storage-&gt;declaring_method_ids['__get']</code>
      <code>$classlike_storage-&gt;declaring_method_ids['__get']</code>
      <code>$classlike_storage-&gt;methods['__construct']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingImmutableAnnotation']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['MissingParamType']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['PossiblyUnusedMethod']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['PossiblyUnusedProperty']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['UnusedMethod']</code>
      <code>$project_analyzer-&gt;getIssuesToFix()['UnusedProperty']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Codebase/InternalCallMapHandler.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$callables[0]</code>
      <code>$callables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Codebase/Methods.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$function_callables[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Codebase/Populator.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$storage-&gt;methods['__construct']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Codebase/Reflection.php">
    <UnusedPsalmSuppress occurrences="2">
      <code>TypeDoesNotContainType</code>
      <code>UndefinedClass</code>
    </UnusedPsalmSuppress>
  </file>
  <file src="src/Psalm/Internal/Diff/ClassStatementsDiffer.php">
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$a-&gt;props[0]</code>
      <code>$a-&gt;stmts[0]</code>
      <code>$a_stmt_comments[0]</code>
      <code>$b-&gt;props[0]</code>
      <code>$b-&gt;stmts[0]</code>
      <code>$b_stmt_comments[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/ExecutionEnvironment/BuildInfoCollector.php">
    <LiteralKeyUnshapedArray occurrences="8">
      <code>$event_data['head_commit']</code>
      <code>$event_data['number']</code>
      <code>$this-&gt;env['APPVEYOR']</code>
      <code>$this-&gt;env['CIRCLECI']</code>
      <code>$this-&gt;env['GITHUB_ACTIONS']</code>
      <code>$this-&gt;env['JENKINS_URL']</code>
      <code>$this-&gt;env['SCRUTINIZER']</code>
      <code>$this-&gt;env['TRAVIS']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/FileManipulation/FunctionDocblockManipulator.php">
    <LiteralKeyUnshapedArray occurrences="5">
      <code>$parsed_docblock-&gt;tags['param']</code>
      <code>$parsed_docblock-&gt;tags['psalm-param']</code>
      <code>$parsed_docblock-&gt;tags['psalm-return']</code>
      <code>$parsed_docblock-&gt;tags['return']</code>
      <code>$parsed_docblock-&gt;tags['return']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/FileManipulation/PropertyDocblockManipulator.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$parsed_docblock-&gt;tags['psalm-var']</code>
      <code>$parsed_docblock-&gt;tags['var']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$stmt-&gt;props[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Fork/Pool.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$err['message']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/LanguageClient.php">
    <DocblockTypeContradiction occurrences="3">
      <code>$type &lt; 1</code>
      <code>$type &lt; 1 || $type &gt; 4</code>
      <code>$type &gt; 4</code>
    </DocblockTypeContradiction>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/Message.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$headers['Content-Type']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$pair[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/ProtocolStreamReader.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$this-&gt;headers['Content-Length']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/LanguageServer/Server/TextDocument.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$contentChanges[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/MethodIdentifier.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$method_id_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/PartialParserVisitor.php">
    <PossiblyUndefinedIntArrayOffset occurrences="8">
      <code>$cs[0]</code>
      <code>$match[0]</code>
      <code>$match[1]</code>
      <code>$match[2]</code>
      <code>$node-&gt;stmts[0]</code>
      <code>$replacement_stmts[0]</code>
      <code>$replacement_stmts[0]</code>
      <code>$replacement_stmts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/ClassLikeDocblockParser.php">
    <LiteralKeyUnshapedArray occurrences="32">
      <code>$parsed_docblock-&gt;combined_tags['extends']</code>
      <code>$parsed_docblock-&gt;combined_tags['implements']</code>
      <code>$parsed_docblock-&gt;combined_tags['method']</code>
      <code>$parsed_docblock-&gt;combined_tags['template']</code>
      <code>$parsed_docblock-&gt;combined_tags['template-covariant']</code>
      <code>$parsed_docblock-&gt;tags['deprecated']</code>
      <code>$parsed_docblock-&gt;tags['final']</code>
      <code>$parsed_docblock-&gt;tags['internal']</code>
      <code>$parsed_docblock-&gt;tags['mixin']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-import-type']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-template']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-template-covariant']</code>
      <code>$parsed_docblock-&gt;tags['psalm-consistent-constructor']</code>
      <code>$parsed_docblock-&gt;tags['psalm-consistent-templates']</code>
      <code>$parsed_docblock-&gt;tags['psalm-external-mutation-free']</code>
      <code>$parsed_docblock-&gt;tags['psalm-immutable']</code>
      <code>$parsed_docblock-&gt;tags['psalm-import-type']</code>
      <code>$parsed_docblock-&gt;tags['psalm-internal']</code>
      <code>$parsed_docblock-&gt;tags['psalm-mutation-free']</code>
      <code>$parsed_docblock-&gt;tags['psalm-override-method-visibility']</code>
      <code>$parsed_docblock-&gt;tags['psalm-override-property-visibility']</code>
      <code>$parsed_docblock-&gt;tags['psalm-require-extends']</code>
      <code>$parsed_docblock-&gt;tags['psalm-require-implements']</code>
      <code>$parsed_docblock-&gt;tags['psalm-seal-methods']</code>
      <code>$parsed_docblock-&gt;tags['psalm-seal-properties']</code>
      <code>$parsed_docblock-&gt;tags['psalm-stub-override']</code>
      <code>$parsed_docblock-&gt;tags['psalm-suppress']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-specialize']</code>
      <code>$parsed_docblock-&gt;tags['psalm-template']</code>
      <code>$parsed_docblock-&gt;tags['psalm-template-covariant']</code>
      <code>$parsed_docblock-&gt;tags['psalm-yield']</code>
      <code>$template_entries[$source_prefix]</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="4">
      <code>$doc_line_parts[1]</code>
      <code>$matches[0]</code>
      <code>$method_tree-&gt;children[0]</code>
      <code>$method_tree-&gt;children[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/ClassLikeNodeScanner.php">
    <LiteralKeyUnshapedArray occurrences="11">
      <code>$class_storage-&gt;methods[$method_name_lc]</code>
      <code>$comments-&gt;combined_tags['use']</code>
      <code>$comments-&gt;tags['deprecated']</code>
      <code>$comments-&gt;tags['deprecated']</code>
      <code>$comments-&gt;tags['extends']</code>
      <code>$comments-&gt;tags['implements']</code>
      <code>$comments-&gt;tags['template-extends']</code>
      <code>$comments-&gt;tags['template-implements']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-type']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-type']</code>
      <code>$parsed_docblock-&gt;tags['psalm-type']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="3">
      <code>$l[4]</code>
      <code>$r[4]</code>
      <code>$var_line_parts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/ExpressionScanner.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$node-&gt;getArgs()[0]</code>
      <code>$node-&gt;getArgs()[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/FunctionLikeDocblockParser.php">
    <LiteralKeyUnshapedArray occurrences="47">
      <code>$parsed_docblock-&gt;combined_tags['param']</code>
      <code>$parsed_docblock-&gt;combined_tags['param-out']</code>
      <code>$parsed_docblock-&gt;combined_tags['return']</code>
      <code>$parsed_docblock-&gt;combined_tags['template']</code>
      <code>$parsed_docblock-&gt;combined_tags['var']</code>
      <code>$parsed_docblock-&gt;tags[$alias]</code>
      <code>$parsed_docblock-&gt;tags['deprecated']</code>
      <code>$parsed_docblock-&gt;tags['global']</code>
      <code>$parsed_docblock-&gt;tags['inheritDoc']</code>
      <code>$parsed_docblock-&gt;tags['inheritdoc']</code>
      <code>$parsed_docblock-&gt;tags['internal']</code>
      <code>$parsed_docblock-&gt;tags['no-named-arguments']</code>
      <code>$parsed_docblock-&gt;tags['param']</code>
      <code>$parsed_docblock-&gt;tags['param-taint']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-param']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-return']</code>
      <code>$parsed_docblock-&gt;tags['phpstan-template']</code>
      <code>$parsed_docblock-&gt;tags['psalm-assert']</code>
      <code>$parsed_docblock-&gt;tags['psalm-assert-if-false']</code>
      <code>$parsed_docblock-&gt;tags['psalm-assert-if-true']</code>
      <code>$parsed_docblock-&gt;tags['psalm-assert-untainted']</code>
      <code>$parsed_docblock-&gt;tags['psalm-external-mutation-free']</code>
      <code>$parsed_docblock-&gt;tags['psalm-flow']</code>
      <code>$parsed_docblock-&gt;tags['psalm-if-this-is']</code>
      <code>$parsed_docblock-&gt;tags['psalm-ignore-falsable-return']</code>
      <code>$parsed_docblock-&gt;tags['psalm-ignore-nullable-return']</code>
      <code>$parsed_docblock-&gt;tags['psalm-import-type']</code>
      <code>$parsed_docblock-&gt;tags['psalm-internal']</code>
      <code>$parsed_docblock-&gt;tags['psalm-mutation-free']</code>
      <code>$parsed_docblock-&gt;tags['psalm-param']</code>
      <code>$parsed_docblock-&gt;tags['psalm-pure']</code>
      <code>$parsed_docblock-&gt;tags['psalm-return']</code>
      <code>$parsed_docblock-&gt;tags['psalm-stub-override']</code>
      <code>$parsed_docblock-&gt;tags['psalm-suppress']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-escape']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-sink']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-source']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-specialize']</code>
      <code>$parsed_docblock-&gt;tags['psalm-taint-unescape']</code>
      <code>$parsed_docblock-&gt;tags['psalm-template']</code>
      <code>$parsed_docblock-&gt;tags['psalm-variadic']</code>
      <code>$parsed_docblock-&gt;tags['pure']</code>
      <code>$parsed_docblock-&gt;tags['return']</code>
      <code>$parsed_docblock-&gt;tags['return-taint']</code>
      <code>$parsed_docblock-&gt;tags['since']</code>
      <code>$parsed_docblock-&gt;tags['throws']</code>
      <code>$template_entries[$source_prefix]</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$line_parts[1]</code>
      <code>$since_parts[1]</code>
    </PossiblyUndefinedIntArrayOffset>
    <RedundantCondition occurrences="1">
      <code>count($line_parts) &gt; 0</code>
    </RedundantCondition>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/FunctionLikeDocblockScanner.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$new_param_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$new</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="3">
      <code>$new []</code>
      <code>$t</code>
      <code>$types</code>
    </MixedAssignment>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$flow_parts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>!$storage-&gt;signature_return_type</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/Reflector/FunctionLikeNodeScanner.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$classlike_storage-&gt;methods['__construct']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$stmt-&gt;stmts[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PhpVisitor/SimpleNameResolver.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$cs[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/PluginManager/ComposerLock.php">
    <LiteralKeyUnshapedArray occurrences="5">
      <code>$composer_lock_contents['packages']</code>
      <code>$package['extra']</code>
      <code>$package['extra']['psalm']</code>
      <code>$package['extra']['psalm']['pluginClass']</code>
      <code>$package['name']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayChunkReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$array_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayColumnReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$row_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayFilterReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$reconciled_types['$inner_type']</code>
      <code>$reconciled_types['$inner_type']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayMapReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$arg_types['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayPadReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$array_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayPopReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayRandReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayReduceReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$array_arg_types['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayReverseReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArraySpliceReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/ArrayUniqueReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$first_arg_type-&gt;getAtomicTypes()['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/FilterVarReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="4">
      <code>$atomic_type-&gt;properties['flags']</code>
      <code>$atomic_type-&gt;properties['options']</code>
      <code>$atomic_type-&gt;properties['options']-&gt;getAtomicTypes()['array']</code>
      <code>$options_array-&gt;properties['default']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/InArrayReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$types['array']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/ReturnTypeProvider/MbInternalEncodingReturnTypeProvider.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$atomic_type-&gt;methods['__toString']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Provider/StatementsProvider.php">
    <MixedArgument occurrences="7">
      <code>$key-&gt;value</code>
      <code>$node-&gt;name-&gt;name</code>
      <code>$prev</code>
      <code>$prev</code>
      <code>$var-&gt;value</code>
      <code>$var-&gt;value</code>
      <code>array_shift($expr)</code>
    </MixedArgument>
    <MixedAssignment occurrences="3">
      <code>$class</code>
      <code>$expr []</code>
      <code>$prev</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>enterNode</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2"/>
    <UndefinedClass occurrences="1">
      <code>Helper</code>
    </UndefinedClass>
    <UndefinedPropertyFetch occurrences="4">
      <code>$key-&gt;value</code>
      <code>$node-&gt;name-&gt;name</code>
      <code>$var-&gt;value</code>
      <code>$var-&gt;value</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="src/Psalm/Internal/Scanner/DocblockParser.php">
    <LiteralKeyUnshapedArray occurrences="63">
      <code>$docblock-&gt;tags['extends']</code>
      <code>$docblock-&gt;tags['extends']</code>
      <code>$docblock-&gt;tags['ignore-var']</code>
      <code>$docblock-&gt;tags['implements']</code>
      <code>$docblock-&gt;tags['implements']</code>
      <code>$docblock-&gt;tags['inherits']</code>
      <code>$docblock-&gt;tags['inherits']</code>
      <code>$docblock-&gt;tags['method']</code>
      <code>$docblock-&gt;tags['method']</code>
      <code>$docblock-&gt;tags['param']</code>
      <code>$docblock-&gt;tags['param']</code>
      <code>$docblock-&gt;tags['param-out']</code>
      <code>$docblock-&gt;tags['param-out']</code>
      <code>$docblock-&gt;tags['phpstan-extends']</code>
      <code>$docblock-&gt;tags['phpstan-extends']</code>
      <code>$docblock-&gt;tags['phpstan-implements']</code>
      <code>$docblock-&gt;tags['phpstan-implements']</code>
      <code>$docblock-&gt;tags['phpstan-param']</code>
      <code>$docblock-&gt;tags['phpstan-param']</code>
      <code>$docblock-&gt;tags['phpstan-return']</code>
      <code>$docblock-&gt;tags['phpstan-return']</code>
      <code>$docblock-&gt;tags['phpstan-template']</code>
      <code>$docblock-&gt;tags['phpstan-template']</code>
      <code>$docblock-&gt;tags['phpstan-template-covariant']</code>
      <code>$docblock-&gt;tags['phpstan-template-covariant']</code>
      <code>$docblock-&gt;tags['phpstan-use']</code>
      <code>$docblock-&gt;tags['phpstan-use']</code>
      <code>$docblock-&gt;tags['phpstan-var']</code>
      <code>$docblock-&gt;tags['phpstan-var']</code>
      <code>$docblock-&gt;tags['psalm-extends']</code>
      <code>$docblock-&gt;tags['psalm-extends']</code>
      <code>$docblock-&gt;tags['psalm-ignore-var']</code>
      <code>$docblock-&gt;tags['psalm-implements']</code>
      <code>$docblock-&gt;tags['psalm-implements']</code>
      <code>$docblock-&gt;tags['psalm-method']</code>
      <code>$docblock-&gt;tags['psalm-param']</code>
      <code>$docblock-&gt;tags['psalm-param']</code>
      <code>$docblock-&gt;tags['psalm-param-out']</code>
      <code>$docblock-&gt;tags['psalm-return']</code>
      <code>$docblock-&gt;tags['psalm-return']</code>
      <code>$docblock-&gt;tags['psalm-template']</code>
      <code>$docblock-&gt;tags['psalm-template']</code>
      <code>$docblock-&gt;tags['psalm-template-covariant']</code>
      <code>$docblock-&gt;tags['psalm-template-covariant']</code>
      <code>$docblock-&gt;tags['psalm-use']</code>
      <code>$docblock-&gt;tags['psalm-use']</code>
      <code>$docblock-&gt;tags['psalm-var']</code>
      <code>$docblock-&gt;tags['psalm-var']</code>
      <code>$docblock-&gt;tags['return']</code>
      <code>$docblock-&gt;tags['template']</code>
      <code>$docblock-&gt;tags['template']</code>
      <code>$docblock-&gt;tags['template-covariant']</code>
      <code>$docblock-&gt;tags['template-covariant']</code>
      <code>$docblock-&gt;tags['template-extends']</code>
      <code>$docblock-&gt;tags['template-extends']</code>
      <code>$docblock-&gt;tags['template-implements']</code>
      <code>$docblock-&gt;tags['template-implements']</code>
      <code>$docblock-&gt;tags['template-use']</code>
      <code>$docblock-&gt;tags['template-use']</code>
      <code>$docblock-&gt;tags['use']</code>
      <code>$docblock-&gt;tags['use']</code>
      <code>$docblock-&gt;tags['var']</code>
      <code>$docblock-&gt;tags['var']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Scanner/PhpStormMetaScanner.php">
    <LiteralKeyUnshapedArray occurrences="4">
      <code>$call_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$call_arg_type-&gt;getAtomicTypes()['array']</code>
      <code>$map['']</code>
      <code>$map['']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Type/Comparator/AtomicTypeComparator.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$input_type_part-&gt;methods['__toString']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Type/Comparator/IntegerRangeComparator.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$container_atomic_types['int']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Type/NegatedAssertionReconciler.php">
    <LiteralKeyUnshapedArray occurrences="7">
      <code>$existing_var_atomic_types['DateTimeInterface']</code>
      <code>$existing_var_atomic_types['bool']</code>
      <code>$existing_var_atomic_types['bool']</code>
      <code>$existing_var_atomic_types['int']</code>
      <code>$existing_var_atomic_types['iterable']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['array-key']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['int']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Type/SimpleAssertionReconciler.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>$existing_var_type-&gt;getAtomicTypes()['array']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['array']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['array']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['mixed']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['scalar']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['string']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Type/SimpleNegatedAssertionReconciler.php">
    <LiteralKeyUnshapedArray occurrences="4">
      <code>$existing_var_atomic_types['array']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['mixed']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['scalar']</code>
      <code>$existing_var_type-&gt;getAtomicTypes()['string']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Internal/Type/TypeCombiner.php">
    <LiteralKeyUnshapedArray occurrences="57">
      <code>$combination-&gt;builtin_type_params['Traversable']</code>
      <code>$combination-&gt;builtin_type_params['Traversable']</code>
      <code>$combination-&gt;builtin_type_params['Traversable']</code>
      <code>$combination-&gt;builtin_type_params['Traversable']</code>
      <code>$combination-&gt;builtin_type_params['Traversable']</code>
      <code>$combination-&gt;builtin_type_params['Traversable']</code>
      <code>$combination-&gt;builtin_type_params['iterable']</code>
      <code>$combination-&gt;builtin_type_params['iterable']</code>
      <code>$combination-&gt;builtin_type_params['iterable']</code>
      <code>$combination-&gt;builtin_type_params['iterable']</code>
      <code>$combination-&gt;builtin_type_params['iterable']</code>
      <code>$combination-&gt;named_object_types['Traversable']</code>
      <code>$combination-&gt;named_object_types['Traversable']</code>
      <code>$combination-&gt;named_object_types['Traversable']</code>
      <code>$combination-&gt;named_object_types['Traversable']</code>
      <code>$combination-&gt;value_types['array-key']</code>
      <code>$combination-&gt;value_types['array-key']</code>
      <code>$combination-&gt;value_types['bool']</code>
      <code>$combination-&gt;value_types['bool']</code>
      <code>$combination-&gt;value_types['callable']</code>
      <code>$combination-&gt;value_types['callable']</code>
      <code>$combination-&gt;value_types['callable']</code>
      <code>$combination-&gt;value_types['callable']</code>
      <code>$combination-&gt;value_types['callable-object']</code>
      <code>$combination-&gt;value_types['class-string']</code>
      <code>$combination-&gt;value_types['false']</code>
      <code>$combination-&gt;value_types['false']</code>
      <code>$combination-&gt;value_types['false']</code>
      <code>$combination-&gt;value_types['float']</code>
      <code>$combination-&gt;value_types['int']</code>
      <code>$combination-&gt;value_types['int']</code>
      <code>$combination-&gt;value_types['int']</code>
      <code>$combination-&gt;value_types['int']</code>
      <code>$combination-&gt;value_types['int']</code>
      <code>$combination-&gt;value_types['int']</code>
      <code>$combination-&gt;value_types['iterable']</code>
      <code>$combination-&gt;value_types['iterable']</code>
      <code>$combination-&gt;value_types['never']</code>
      <code>$combination-&gt;value_types['null']</code>
      <code>$combination-&gt;value_types['scalar']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['string']</code>
      <code>$combination-&gt;value_types['true']</code>
      <code>$combination-&gt;value_types['true']</code>
      <code>$combination-&gt;value_types['true']</code>
      <code>$combination-&gt;value_types['true']</code>
      <code>$combination-&gt;value_types['void']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="6">
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
      <code>$combination-&gt;array_type_params[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Internal/Type/TypeParser.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$keyed_intersection_types['static']</code>
      <code>$offset_template_data['']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedIntArrayOffset occurrences="8">
      <code>$intersection_types[0]</code>
      <code>$parse_tree-&gt;children[0]</code>
      <code>$parse_tree-&gt;condition-&gt;children[0]</code>
      <code>array_keys($offset_template_data)[0]</code>
      <code>array_keys($template_type_map[$array_param_name])[0]</code>
      <code>array_keys($template_type_map[$class_name])[0]</code>
      <code>array_keys($template_type_map[$fq_classlike_name])[0]</code>
      <code>array_keys($template_type_map[$template_param_name])[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/IssueBuffer.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$_SERVER['GITHUB_WORKFLOW']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Plugin/Shepherd.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$build_info['git']</code>
      <code>$build_info['git']</code>
      <code>$curl_info['ssl_verify_result']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Report/ConsoleReport.php">
    <RedundantCondition occurrences="1">
      <code>true</code>
    </RedundantCondition>
  </file>
  <file src="src/Psalm/Report/JsonReport.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$issue_data['dupe_key']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="src/Psalm/Type/Atomic.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>array_keys($template_type_map[$value])[0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Atomic/GenericTrait.php">
    <PossiblyUndefinedIntArrayOffset occurrences="1">
      <code>$this-&gt;type_params[1]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Reconciler.php">
    <PossiblyUndefinedIntArrayOffset occurrences="2">
      <code>$type[0]</code>
      <code>$type[0][0]</code>
    </PossiblyUndefinedIntArrayOffset>
  </file>
  <file src="src/Psalm/Type/Union.php">
    <LiteralKeyUnshapedArray occurrences="60">
      <code>$this-&gt;types['array']</code>
      <code>$this-&gt;types['array']</code>
      <code>$this-&gt;types['array']</code>
      <code>$this-&gt;types['array']</code>
      <code>$this-&gt;types['array']</code>
      <code>$this-&gt;types['array-key']</code>
      <code>$this-&gt;types['array-key']</code>
      <code>$this-&gt;types['array-key']</code>
      <code>$this-&gt;types['array-key']</code>
      <code>$this-&gt;types['array-key']</code>
      <code>$this-&gt;types['bool']</code>
      <code>$this-&gt;types['bool']</code>
      <code>$this-&gt;types['bool']</code>
      <code>$this-&gt;types['bool']</code>
      <code>$this-&gt;types['bool']</code>
      <code>$this-&gt;types['callable-string']</code>
      <code>$this-&gt;types['class-string']</code>
      <code>$this-&gt;types['class-string']</code>
      <code>$this-&gt;types['class-string']</code>
      <code>$this-&gt;types['false']</code>
      <code>$this-&gt;types['false']</code>
      <code>$this-&gt;types['false']</code>
      <code>$this-&gt;types['false']</code>
      <code>$this-&gt;types['false']</code>
      <code>$this-&gt;types['float']</code>
      <code>$this-&gt;types['float']</code>
      <code>$this-&gt;types['float']</code>
      <code>$this-&gt;types['int']</code>
      <code>$this-&gt;types['int']</code>
      <code>$this-&gt;types['iterable']</code>
      <code>$this-&gt;types['iterable']</code>
      <code>$this-&gt;types['mixed']</code>
      <code>$this-&gt;types['mixed']</code>
      <code>$this-&gt;types['mixed']</code>
      <code>$this-&gt;types['mixed']</code>
      <code>$this-&gt;types['never']</code>
      <code>$this-&gt;types['null']</code>
      <code>$this-&gt;types['null']</code>
      <code>$this-&gt;types['null']</code>
      <code>$this-&gt;types['null']</code>
      <code>$this-&gt;types['numeric']</code>
      <code>$this-&gt;types['numeric']</code>
      <code>$this-&gt;types['numeric-string']</code>
      <code>$this-&gt;types['numeric-string']</code>
      <code>$this-&gt;types['object']</code>
      <code>$this-&gt;types['scalar']</code>
      <code>$this-&gt;types['string']</code>
      <code>$this-&gt;types['string']</code>
      <code>$this-&gt;types['string']</code>
      <code>$this-&gt;types['trait-string']</code>
      <code>$this-&gt;types['trait-string']</code>
      <code>$this-&gt;types['trait-string']</code>
      <code>$this-&gt;types['true']</code>
      <code>$this-&gt;types['true']</code>
      <code>$this-&gt;types['true']</code>
      <code>$this-&gt;types['true']</code>
      <code>$this-&gt;types['void']</code>
      <code>$types['false']</code>
      <code>$types['null']</code>
      <code>$types['null']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/BinaryOperationTest.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$context-&gt;vars_in_scope[$var]</code>
      <code>$context-&gt;vars_in_scope[$var]</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/CodebaseTest.php">
    <LiteralKeyUnshapedArray occurrences="12">
      <code>$class_storage-&gt;custom_metadata['a']</code>
      <code>$class_storage-&gt;custom_metadata['extends']</code>
      <code>$class_storage-&gt;custom_metadata['fqcn']</code>
      <code>$class_storage-&gt;custom_metadata['implements']</code>
      <code>$class_storage-&gt;methods['m']</code>
      <code>$class_storage-&gt;methods['m']-&gt;custom_metadata['c']</code>
      <code>$class_storage-&gt;methods['m']-&gt;params[0]-&gt;custom_metadata['g']</code>
      <code>$class_storage-&gt;properties['prop']</code>
      <code>$class_storage-&gt;properties['prop']-&gt;custom_metadata['e']</code>
      <code>$file_storage-&gt;custom_metadata['i']</code>
      <code>$storage-&gt;methods['m']</code>
      <code>$storage-&gt;properties['prop']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/ComposerLockTest.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$plugins['vendor/package']</code>
      <code>$plugins['vendor/package']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/Config/Plugin/FileTypeSelfRegisteringPlugin.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>self::$names['analyzer']</code>
      <code>self::$names['analyzer']</code>
      <code>self::$names['extension']</code>
      <code>self::$names['extension']</code>
      <code>self::$names['scanner']</code>
      <code>self::$names['scanner']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/JsonOutputTest.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>IssueBuffer::getIssuesData()['somefile.php']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/MagicMethodAnnotationTest.php">
    <LiteralKeyUnshapedArray occurrences="1">
      <code>$context-&gt;vars_in_scope['$child']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="tests/MethodMutationTest.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>$method_context-&gt;vars_in_scope['$this-&gt;foo']</code>
      <code>$method_context-&gt;vars_in_scope['$this-&gt;foo']</code>
      <code>$method_context-&gt;vars_in_scope['$this-&gt;user']</code>
      <code>$method_context-&gt;vars_in_scope['$this-&gt;user_viewdata']</code>
      <code>$method_context-&gt;vars_in_scope['$this-&gt;user_viewdata-&gt;name']</code>
      <code>$method_context-&gt;vars_possibly_in_scope['$this-&gt;title']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Expr/ArrowFunction.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['byRef']</code>
      <code>$subNodes['expr']</code>
      <code>$subNodes['params']</code>
      <code>$subNodes['returnType']</code>
      <code>$subNodes['static']</code>
    </LiteralKeyUnshapedArray>
    <PossiblyUndefinedStringArrayOffset occurrences="1">
      <code>$subNodes['expr']</code>
    </PossiblyUndefinedStringArrayOffset>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Expr/Closure.php">
    <LiteralKeyUnshapedArray occurrences="7">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['byRef']</code>
      <code>$subNodes['params']</code>
      <code>$subNodes['returnType']</code>
      <code>$subNodes['static']</code>
      <code>$subNodes['stmts']</code>
      <code>$subNodes['uses']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/ClassMethod.php">
    <LiteralKeyUnshapedArray occurrences="7">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['byRef']</code>
      <code>$subNodes['flags']</code>
      <code>$subNodes['params']</code>
      <code>$subNodes['returnType']</code>
      <code>$subNodes['type']</code>
      <code>array_key_exists('stmts', $subNodes)</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/Class_.php">
    <LiteralKeyUnshapedArray occurrences="6">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['extends']</code>
      <code>$subNodes['flags']</code>
      <code>$subNodes['implements']</code>
      <code>$subNodes['stmts']</code>
      <code>$subNodes['type']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/For_.php">
    <LiteralKeyUnshapedArray occurrences="4">
      <code>$subNodes['cond']</code>
      <code>$subNodes['init']</code>
      <code>$subNodes['loop']</code>
      <code>$subNodes['stmts']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/Foreach_.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$subNodes['byRef']</code>
      <code>$subNodes['keyVar']</code>
      <code>$subNodes['stmts']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/Function_.php">
    <LiteralKeyUnshapedArray occurrences="5">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['byRef']</code>
      <code>$subNodes['params']</code>
      <code>$subNodes['returnType']</code>
      <code>$subNodes['stmts']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/If_.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$subNodes['else']</code>
      <code>$subNodes['elseifs']</code>
      <code>$subNodes['stmts']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/Interface_.php">
    <LiteralKeyUnshapedArray occurrences="3">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['extends']</code>
      <code>$subNodes['stmts']</code>
    </LiteralKeyUnshapedArray>
  </file>
  <file src="vendor/nikic/php-parser/lib/PhpParser/Node/Stmt/Trait_.php">
    <LiteralKeyUnshapedArray occurrences="2">
      <code>$subNodes['attrGroups']</code>
      <code>$subNodes['stmts']</code>
    </LiteralKeyUnshapedArray>
  </file>
</files>
